{"version":3,"sources":["components/todo/Todo.jsx","components/todoList/TodoList.jsx","actions.js","containers/todoListHOC/TodoListHOC.js","components/addTodo/AddTodo.jsx","containers/addTodoHOC/AddTodoHOC.js","components/filterLink/FilterLink.jsx","components/filter/Filter.jsx","containers/filterHOC/FilterHOC.js","App.jsx","serviceWorker.js","reducers.js","components/root/Root.jsx","index.js"],"names":["Todo","_ref","data","onClick","message","text","status","completed","react_default","a","createElement","className","TodoList","todos","toggleTodo","filter","Fragment","map","todo","index","todo_Todo","key","id","ADD_TODO","TOGGLE_TODO","SET_VISIBILITY_FILTER","VisibilityFilters","name","path","title","addTodo","type","getVisibleTodos","TodoListHOC","connect","state","ownProps","dispatch","keyDownHandler","e","callback","keyCode","target","value","AddTodo","onAddTodo","_useState","useState","_useState2","Object","slicedToArray","onKeyDown","AddTodoHOC","FilterLink","NavLink","to","concat","activeClassName","Filter","setVisibilityFilter","components_filterLink_FilterLink","FilterHOC","App","props","filterHOC_FilterHOC","addTodoHOC_AddTodoHOC","todoListHOC_TodoListHOC","match","params","Boolean","window","location","hostname","initialState","visibilityFilter","todoApp","combineReducers","arguments","length","undefined","action","toConsumableArray","uuid","v4","objectSpread","Root","store","es","BrowserRouter","Route","exact","process","component","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","loggerMiddleware","createLogger","createStore","applyMiddleware","ReactDOM","render","root_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10577d19.chunk.js","sourcesContent":["import React from 'react';\nimport './Todo.css';\n\nfunction Todo({data, onClick}) {\n\n  const message = data.text;\n  const status = data.completed ? \"COMPLETED\" : \"UNCOMPLETED\";\n\n  return (\n    <div \n      className={\"todo \" + (data.completed ? \"todo_completed\" : \"todo_uncompleted\")}\n      onClick={onClick}>\n      <div>\n        {message}\n      </div>\n      <div className=\"todo__status\">\n        #{status}\n      </div>\n    </div>\n  )\n}\n\nexport default Todo;","import React, { useEffect } from 'react';\nimport Todo from './../todo/Todo';\n// import TodoHOC from './../../containers/todoHOC/TodoHOC';\n\nfunction TodoList({todos, toggleTodo, filter}) {\n  return (\n    <>\n      {todos.map((todo, index) => {\n        return <Todo key={todo.id} data={todo} onClick={() => {toggleTodo(todo.id)}} />\n        // return <TodoHOC key={todo.id}  />\n      })}\n    </> \n  )\n}\n\nexport default TodoList;","export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const SET_VISIBILITY_FILTER = \"SET_VISIBILITY_FILTER\";\n\nexport const VisibilityFilters = [\n  {\n    id: \"499994cb-fce3-4ada-a9ca-30ce14f92636\",\n    name: \"SHOW_ALL\",\n    path: \"all\",\n    title: \"Show All\"\n  },\n  {\n    id: \"bac531db-9d0c-4a04-b9ee-454f37984a4a\",\n    name: \"SHOW_COMPLETED\",\n    path: \"completed\",\n    title: \"Show Completed\"\n  },\n  {\n    id: \"a38a80de-ff06-4fe8-a690-93d502180ba7\",\n    name: \"SHOW_ACTIVE\",\n    path: \"active\",\n    title: \"Show Active\"\n  }\n]\n\nexport function addTodo(text) {\n  return {\n    type: ADD_TODO, \n    text\n  }\n}\n\nexport function toggleTodo(id) {\n  return {\n    type: TOGGLE_TODO,\n    id\n  }\n}\n\nexport function setVisibilityFilter(filter) {\n  return {\n    type: SET_VISIBILITY_FILTER,\n    filter\n  }\n}","import { connect } from 'react-redux';\nimport TodoList from '../../components/todoList/TodoList';\nimport { toggleTodo } from '../../actions';\n\nconst getVisibleTodos = (todos, filter) => {\n  switch(filter) {\n    case 'completed':\n    return todos.filter(todo => todo.completed)\n    case 'active':\n    return todos.filter(todo => !todo.completed)\n    case 'all':\n    default:\n      return todos;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    todos: getVisibleTodos(state.todos, ownProps.filter)\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleTodo: (index) => {dispatch(toggleTodo(index))}\n  }\n}\n\nconst TodoListHOC = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);\n\nexport default TodoListHOC;","import React, { useState } from 'react';\nimport './AddTodo.css';\n\nconst keyDownHandler = (e, callback) => {\n  if (e.keyCode === 13) {\n    callback(e.target.value);\n  }\n}\n\nfunction AddTodo({onAddTodo}) {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div className=\"add-todo\">\n      <input \n        type=\"text\" \n        className=\"add-todo__input\" \n        onKeyDown={e => keyDownHandler(e, onAddTodo)} \n      />\n    </div>\n  )\n}\n\nexport default AddTodo;","import { connect } from 'react-redux';\nimport { addTodo } from './../../actions';\nimport AddTodo from './../../components/addTodo/AddTodo';\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddTodo: (text) => { dispatch(addTodo(text)) }\n  }\n}\n\nconst AddTodoHOC = connect(\n  null,\n  mapDispatchToProps\n)(AddTodo);\n\nexport default AddTodoHOC;","import React from 'react';\nimport './FilterLink.css';\nimport { NavLink } from 'react-router-dom';\n\nconst FilterLink = ({ filter, path, title, onClick }) => {\n  return (\n    <NavLink\n      to={`/${path}`}\n      onClick={onClick}\n      className=\"filter-link\"\n      activeClassName=\"filter-link_active\"\n    >\n      {title}\n    </NavLink>\n  );\n}\n\nexport default FilterLink;","import React from 'react';\nimport './Filter.css';\nimport FilterLink from './../filterLink/FilterLink';\nimport { VisibilityFilters } from './../../actions.js';\n\nfunction Filter({setVisibilityFilter}) {\n  return (\n    <div className=\"filter\">\n      <div className=\"filter__title\">\n        Filter\n      </div>\n      {VisibilityFilters.map(filter => {\n        return (\n          <FilterLink\n          key={filter.id} \n          title={filter.title} \n          filter={filter.name}\n          path={filter.path}\n          onClick={() => {setVisibilityFilter(filter.name)}} />\n        )})}\n    </div>\n  )\n}\n\nexport default Filter;","import { connect } from 'react-redux';\nimport Filter from './../../components/filter/Filter';\nimport { setVisibilityFilter, VisibilityFilters } from './../../actions';\n\nconst mapStateToProps = (state) => {\n  return state;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setVisibilityFilter: (filter) => {\n      dispatch(setVisibilityFilter(filter))}\n  }\n}\n\nconst FilterHOC = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Filter);\n\nexport default FilterHOC;","import React, { useEffect } from 'react';\nimport './App.css';\nimport TodoListHOC from './containers/todoListHOC/TodoListHOC';\nimport AddTodoHOC from './containers/addTodoHOC/AddTodoHOC';\nimport FilterHOC from './containers/filterHOC/FilterHOC';\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      <h1>Todos:</h1>\n      <FilterHOC />\n      <AddTodoHOC />\n      <TodoListHOC \n        filter={ props.match.params.path || \"SHOW_ALL\" }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport uuid from 'uuid';\nimport { \n  VisibilityFilters,\n  SET_VISIBILITY_FILTER,\n  ADD_TODO,\n  TOGGLE_TODO\n } from \"./actions\";\n\nconst initialState = {\n  visibilityFilter: VisibilityFilters[0].name,\n  todos: []\n}\n\nfunction todos(state = initialState.todos, action) {\nswitch (action.type) {\n    case ADD_TODO:\n      return [\n        ...state, {\n          id: uuid.v4(),\n          text: action.text,\n          completed: false\n        }\n      ];\n    break;\n    case TOGGLE_TODO:\n      return state.map(todo => {\n        if (action.id === todo.id) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          }\n        }\n\n        return todo;\n      });\n    break;\n    default: \n      return state;\n  }\n}\n\nfunction visibilityFilter(state = initialState.visibilityFilter, action) {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER: \n      return action.filter\n    default: \n      return state;\n  }\n}\n\nconst todoApp = combineReducers({\n  visibilityFilter,\n  todos\n})\n\nexport default todoApp;","import React, { useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport App from './../../App';\n\nconst Root = ({store}) => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <>\n          <Route exact path={`${process.env.PUBLIC_URL}/`} component={App} />\n          <Route path={`${process.env.PUBLIC_URL}/:path`} component={App} />\n        </>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport todoApp from './reducers';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { addTodo } from './actions';\nimport Root from './components/root/Root';\nimport { createLogger } from 'redux-logger';\n\nlet composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet loggerMiddleware = createLogger();\n\nlet store = createStore(\n    todoApp,\n    composeEnhancers(\n      applyMiddleware(\n        loggerMiddleware\n      )\n    )\n  );\n\nstore.dispatch(addTodo(\"Lol\"));\nstore.dispatch(addTodo(\"Kek\"));\nstore.dispatch(addTodo(\"Cheburek\"));\n\nReactDOM.render(\n  <Root store={store} />,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}